pipeline{
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Checkout from Git'){
            steps{
                git branch: 'main', url: 'https://github.com/sandeepnainala/Netflix-clone-DevSecOps.git'
            }
        }
        stage("Sonarqube Analysis "){
            steps{
                withSonarQubeEnv('sonar-server') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Netflix \
                    -Dsonar.projectKey=Netflix '''
                }
            }
        }
        stage('quality gate'){
           steps{
              script {
                 waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
              }
           }
        }
        stage('Install dependencies'){
           steps{
              sh "npm install"
           }
        }
    }
    post {
         always {
            emailext attachLog: true,
                subject: "'${currentBuild.result}'",
                body: "Project: ${env.JOB_NAME}<br/>" +
                    "Build Number: ${env.BUILD_NUMBER}<br/>" +
                    "URL: ${env.BUILD_URL}<br/>",
                to: 'nainalasandeep@gmail.com',  #change Your mail
                attachmentsPattern: 'trivyfs.txt,trivyimage.txt'
            }
        }
    }